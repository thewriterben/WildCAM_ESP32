# Multi-stage build for production
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    libopencv-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Production stage
FROM python:3.11-slim

# Create non-root user
RUN groupadd -g 1001 wildlife && \
    useradd -r -u 1001 -g wildlife -d /app -s /sbin/nologin -c "Wildlife user" wildlife

# Install runtime dependencies only
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    libopencv-dev \
    python3-opencv \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy application code
COPY --chown=wildlife:wildlife . .

# Create necessary directories with proper permissions
RUN mkdir -p uploads logs && \
    chown -R wildlife:wildlife /app && \
    chmod -R 755 /app

# Switch to non-root user
USER wildlife

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Production command with security settings
CMD ["gunicorn", \
     "--worker-class", "eventlet", \
     "--workers", "${GUNICORN_WORKERS:-4}", \
     "--max-requests", "${GUNICORN_MAX_REQUESTS:-1000}", \
     "--max-requests-jitter", "${GUNICORN_MAX_REQUESTS_JITTER:-100}", \
     "--preload", \
     "--bind", "0.0.0.0:5000", \
     "--access-logfile", "/app/logs/access.log", \
     "--error-logfile", "/app/logs/error.log", \
     "--log-level", "info", \
     "--timeout", "120", \
     "--keep-alive", "5", \
     "app:app"]