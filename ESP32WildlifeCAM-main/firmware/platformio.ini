; ESP32 Wildlife Camera PlatformIO Configuration
; =============================================
; 
; FIREWALL FIX: This configuration resolves network access issues by:
; - Using pinned library versions (no registry lookups)
; - Disabling telemetry collection
; - Providing offline validation environment
;
; For offline development: ./offline_validate.sh
; For full builds: pio run -e esp32-s3-devkitc-1

[platformio]
default_envs = validation
check_skip_packages = yes

# Validation environment that skips external dependencies
[env:validation]
platform = native
build_flags = 
    -DESP32_VALIDATION_BUILD=1
    -DARDUINO=200
    -I./src
    -I./src/hal
    -I./src/display
    -I./src/configs
check_tool = clangtidy, cppcheck
check_skip_packages = yes
check_flags = 
    clangtidy: --checks=-*,readability-*,performance-*,modernize-*
    cppcheck: --enable=all --inconclusive --std=c++17

# Original ESP32 environment (may require network on first build)
[env:esp32-s3-devkitc-1]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino

# Skip network checks and use local cache
check_tool = clangtidy, cppcheck
check_skip_packages = yes
lib_ldf_mode = deep+

# Build flags for ESP32-S3 with PSRAM and AI optimizations
build_flags = 
    -DCORE_DEBUG_LEVEL=0
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
    -DARDUINO_RUNNING_CORE=1
    -DARDUINO_EVENT_RUNNING_CORE=1
    
    # AI/ML optimizations
    -DESP32_AI_ENABLED=1
    -DTFLITE_MICRO_ENABLED=1
    -DEDGE_IMPULSE_ENABLED=1
    -DAI_POWER_OPTIMIZATION=1
    
    # Phase 1 Enhancements
    -DOTA_ENABLED=1
    -DXPOWERS_ENABLED=1
    -DTFLITE_MICRO_INTEGRATION=1
    
    # Meshtastic/LoRa optimizations
    -DLORA_ENABLED=1
    -DMESH_ENABLED=1
    -DWILDLIFE_TELEMETRY_ENABLED=1
    -DIMAGE_MESH_ENABLED=1
    
    # Memory optimizations for AI and Mesh
    -DCONFIG_SPIRAM_CACHE_WORKAROUND=1
    -DCONFIG_SPIRAM_USE_MALLOC=1
    -DCONFIG_SPIRAM_SUPPORT=1
    
    # Performance optimizations
    -O2
    -ffast-math
    -funroll-loops

# Monitor configuration
monitor_speed = 115200
monitor_filters = esp32_exception_decoder

# Upload configuration
upload_speed = 921600

# Libraries with pinned versions for offline builds
lib_deps = 
    # Camera support
    espressif/esp32-camera@2.0.4
    
    # LoRa networking and Meshtastic protocol
    sandeepmistry/LoRa@0.8.0
    
    # Environmental sensors
    adafruit/Adafruit BME280 Library@2.2.2
    adafruit/Adafruit Unified Sensor@1.1.14
    
    # JSON handling
    bblanchon/ArduinoJson@6.21.3
    
    # Time management
    paulstoffregen/Time@1.6.1
    
    # File system
    arduino-libraries/SD@1.2.4
    
    # Networking utilities
    me-no-dev/AsyncTCP@1.1.1
    
    # Display libraries
    adafruit/Adafruit SSD1306@2.5.7
    adafruit/Adafruit GFX Library@1.11.9
    bodmer/TFT_eSPI@2.5.23
    
    # Cryptography for mesh encryption (optional)
    # rweather/Crypto@0.4.0
    
    # AI/ML Libraries - Phase 1 Implementation
    tensorflow/tflite-micro@2.14.0
    
    # Power Management Enhancement - Phase 1
    lewisxhe/XPowersLib@^0.2.1
    
    # OTA Updates - Phase 1
    ayushsharma82/AsyncElegantOTA@^2.2.7
    
    # Edge Impulse SDK (would be added as custom library)
    # edgeimpulse/edge-impulse-sdk@1.0.0
    
    # MicroPython support (if using hybrid approach)
    # micropython/micropython@^1.20.0

# Partition scheme for large app with OTA
board_build.partitions = huge_app.csv
board_build.filesystem = littlefs

# Flash settings
board_build.flash_mode = qio
board_build.f_flash = 80000000L
board_build.f_cpu = 240000000L

# Debug configuration
debug_tool = esp-prog
debug_init_break = tbreak setup