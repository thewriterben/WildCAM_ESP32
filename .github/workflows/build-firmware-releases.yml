name: Build Firmware Releases

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: 'dev'

jobs:
  build-firmware:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board:
          - name: esp32cam
            display: "AI-Thinker ESP32-CAM"
          - name: esp32s3cam
            display: "ESP32-S3-CAM"
          - name: ttgo-t-camera
            display: "TTGO T-Camera"
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: |
            ~/.platformio
            ~/.cache/pip
          key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
      
      - name: Install PlatformIO
        run: |
          pip install --upgrade platformio
          pio --version
      
      - name: Build firmware for ${{ matrix.board.display }}
        run: |
          cd ESP32WildlifeCAM-main/WildCAM_ESP32
          pio run -e ${{ matrix.board.name }}
      
      - name: Prepare release artifacts
        run: |
          mkdir -p release/${{ matrix.board.name }}
          
          # Copy firmware binary
          cp ESP32WildlifeCAM-main/WildCAM_ESP32/.pio/build/${{ matrix.board.name }}/firmware.bin \
             release/${{ matrix.board.name }}/wildcam_${{ matrix.board.name }}_${{ github.ref_name }}.bin
          
          # Copy bootloader
          cp ESP32WildlifeCAM-main/WildCAM_ESP32/.pio/build/${{ matrix.board.name }}/bootloader.bin \
             release/${{ matrix.board.name }}/bootloader.bin 2>/dev/null || true
          
          # Copy partition table
          cp ESP32WildlifeCAM-main/WildCAM_ESP32/.pio/build/${{ matrix.board.name }}/partitions.bin \
             release/${{ matrix.board.name }}/partitions.bin 2>/dev/null || true
          
          # Create build info
          cat > release/${{ matrix.board.name }}/build_info.txt <<EOF
          WildCAM ESP32 Firmware Build Information
          =========================================
          
          Board: ${{ matrix.board.display }}
          Environment: ${{ matrix.board.name }}
          Version: ${{ github.ref_name }}
          Build Date: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          Git Commit: ${{ github.sha }}
          Git Branch: ${{ github.ref }}
          
          Files in this release:
          - wildcam_${{ matrix.board.name }}_${{ github.ref_name }}.bin : Main firmware
          - bootloader.bin : ESP32 bootloader (if available)
          - partitions.bin : Partition table (if available)
          
          Flash Instructions:
          -------------------
          Using esptool.py:
          esptool.py --chip esp32 --port /dev/ttyUSB0 --baud 460800 write_flash -z 0x1000 bootloader.bin 0x8000 partitions.bin 0x10000 wildcam_${{ matrix.board.name }}_${{ github.ref_name }}.bin
          
          Using PlatformIO:
          pio run -e ${{ matrix.board.name }} -t upload
          
          For detailed instructions, see: https://github.com/thewriterben/WildCAM_ESP32
          EOF
      
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v3
        with:
          name: firmware-${{ matrix.board.name }}-${{ github.ref_name }}
          path: release/${{ matrix.board.name }}/*
          retention-days: 90
